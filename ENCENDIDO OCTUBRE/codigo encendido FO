
BEGIN
CREATE TEMPORARY TABLE parametros_vol_0
  CLUSTER BY sit_site_id
  AS
    SELECT
        'MLA' AS sit_site_id,
        'french_with_iva' AS amortization_system_id,
        'funding' AS purpose,
        --  LENDER ID PRINCIPAL
        '200510359' AS lender_id1,
        -- usuario de MP reservado para originar y cobrar créditos, es Mercado Crédito
        1 AS rate_lender_id1,
        'F' AS worst_rating_lender_id1,
        --  LENDER ID SECUNDARIO (SOLO MLB)
        ' ' AS lender_id2,
        0 AS rate_lender_id2,
        'F' AS worst_rating_lender_id2,
        --  DIAS DE DURACIÓN DE LA PROPUESTA <<<<- COMPLETAR
        '41' AS due_days,
        --  CONTAR INCLUYENDO EL DIA QUE ENCENDEMOS Y EL DIA QUE ENCIENDE INSTORE EL COMPLETO + 5 DÍAS PARA CUBRIR TODO --CAMBIAR ESTO!!!!!
        --  1ST LAYER
        1 AS bit_1st_l,
        1 AS bit_new,
        1 AS bit_old,
        1 AS bit_new_repeat,
        1 AS bit_old_repeat,
        --  2ND LAYER -- COMO ES FO TENEMOS 2L
        1 AS bit_2nd_l,
        1 AS bit_new_2nd_l,
        1 AS bit_old_2nd_l,
        --  3RD LAYER
        1 AS bit_3rd_l,
        1 AS bit_new_3rd_l,
        1 AS bit_old_3rd_l,
        --  EO VS FO y INSTORE VS ONLINE --SE ENCIENDE FO NO MÁS
        0 AS bit_eo,
        1 AS bit_fo,
        1 AS bit_instore,
        1 AS bit_online,
        --  YELLOWS: agrega a los yellows -- EN FO PRENDEMOS YELLOWS
        1 AS bit_yellows,
        --  SIMULACIÓN DE ENCENDIDO: ignora el killer de propuesta de merchants vigente
        --  SI ESTÁ EN CERO CONSIDERA EL KILLER -> EO
        --  SI ESTÁ EN 1 IGNORA EL KILLER --> FO
        1 AS bit_simulacion,
        --  LOGGEO: si lo ponemos en 1 loggea a los elegibles (cumplen reglas duras de oferta, producto, tipo de borrower y layer).
        1 AS bit_loggear,
        --  ESTE VA EN UNO CUANDO LOGUEAMOS JARVIS, SI SE MUERE Y HAY QUE EMPEZAR DE NUEVO USAMOS ESE LOGUEO YA HECHO Y LO VOLVEMOS A CORRER PARA TENER LA VOLATIL PERO EN 0
        --  MAXIMOS DÍAS VALIDOS PARA LOS SCORES: máximo día para tomar scores válidos.
        7 AS max_dias_scores_validos,
        --  ESTIMACIÓN DE ADOPTION: ventana temporal para evaluar ofertas (desde que mes y hasta que mes respecto a hoy miramos).
        -4 AS mes_desde_est_adop,
        -1 AS mes_hasta_est_adop;
        END;

BEGIN
CREATE TEMPORARY TABLE parametros_vol
  CLUSTER BY sit_site_id
  AS SELECT A.*,
        CASE WHEN bit_1st_l = 1 THEN '1ST LAYER' ELSE ' ' END AS param_1st_l,
        CASE WHEN bit_new = 1 THEN 'NEW' ELSE ' ' END AS param_new,
        CASE WHEN bit_old = 1 THEN 'OLD' ELSE ' ' END AS param_old,
        CASE WHEN bit_new_repeat = 1 THEN 'NEW REPEAT' ELSE ' ' END AS param_new_repeat,
        CASE WHEN bit_old_repeat = 1 THEN 'OLD REPEAT' ELSE ' ' END AS param_old_repeat,
        CASE WHEN bit_2nd_l = 1 THEN '2ND LAYER' ELSE ' ' END AS param_2nd_l,
        CASE WHEN bit_new_2nd_l = 1 THEN 'NEW 2L' ELSE ' ' END AS param_new_2nd_l,
        CASE WHEN bit_old_2nd_l = 1 THEN 'OLD 2L' ELSE ' ' END AS param_old_2nd_l,
        CASE WHEN bit_3rd_l = 1 THEN '3RD LAYER' ELSE ' ' END AS param_3rd_l,
        CASE WHEN bit_new_3rd_l = 1 THEN 'NEW 3L' ELSE ' ' END AS param_new_3rd_l,
        CASE WHEN bit_old_3rd_l = 1 THEN 'OLD 3L' ELSE ' ' END AS param_old_3rd_l,
        CASE WHEN bit_eo = 1 THEN 'OFERTABLE EARLY OFFER' ELSE ' ' END AS param_eo,
        CASE WHEN bit_fo = 1 THEN 'OFERTABLE FULL OFFER' ELSE ' ' END AS param_fo,
        CASE WHEN bit_instore = 1 THEN 'INSTORE' ELSE ' ' END AS param_instore,
        CASE WHEN bit_online = 1 THEN 'ONLINE' ELSE ' ' END AS param_online,
        CASE WHEN bit_yellows = 1 THEN 'APROBABLE YELLOW' ELSE ' ' END AS param_yellows
  FROM parametros_vol_0 A;
END; 

BEGIN
CREATE TEMPORARY TABLE caps_maximos
  AS
    SELECT
        a.flag_eo,
        max(a.cap) AS max_cap
      FROM
        `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_PARAM_CAPS` AS a
        CROSS JOIN parametros_vol
      WHERE upper(a.sit_site_id) = upper(parametros_vol.sit_site_id)
      GROUP BY 1;
END;

--  1: ARMADO DE LAS BASES
--  Base para encender
BEGIN
CREATE TEMPORARY TABLE base_encendible_03
  AS
    SELECT
        a.sit_site_id,
        a.cus_cust_id_sel AS borrower_id,
        CASE WHEN parametros_vol.bit_simulacion = 1 THEN a.max_amount_simulacion ELSE a.max_amount END AS max_amount,
        debt_balance,
        CASE WHEN parametros_vol.bit_simulacion = 1 THEN a.monto_calificable_simulacion ELSE a.monto_calificable END AS monto_calificable,
        CASE WHEN upper(a.tag_oferta) = 'OFERTABLE FULL OFFER' THEN a.monthly_tpv_lc ELSE a.tpv_lc_avg_3m END AS tpv,
        a.tna AS interest_rate,
        A.TNA_PROPOSED_AFO,
        a.max_installments,
        parametros_vol.amortization_system_id AS amortization_system_id,
        CASE WHEN A.CUS_CUST_ID_SEL * 1.00 - ROUND((A.CUS_CUST_ID_SEL * 1.000 - 500) / 1000) * 1000 <= (PARAMETROS_VOL.RATE_LENDER_ID1 * 1000) 
        THEN PARAMETROS_VOL.LENDER_ID1
        WHEN A.CUS_CUST_ID_SEL * 1.00 - ROUND((A.CUS_CUST_ID_SEL * 1.000 - 500) / 1000) * 1000 <= 
        ((PARAMETROS_VOL.RATE_LENDER_ID1 + PARAMETROS_VOL.RATE_LENDER_ID2) * 1000) THEN PARAMETROS_VOL.LENDER_ID2 ELSE PARAMETROS_VOL.LENDER_ID1 END 
        AS LENDER_ID_AUX,
        PARAMETROS_VOL.LENDER_ID1,
        PARAMETROS_VOL.LENDER_ID2,
        PARAMETROS_VOL.WORST_RATING_LENDER_ID1,
        PARAMETROS_VOL.WORST_RATING_LENDER_ID2,
        parametros_vol.purpose AS purpose,
        RATING_BHV_PD_1L,
        RATING_BHV_PD_2L,
        SCORING_BHV_1L_DATE,
        SCORING_BHV_2L_DATE,
        A.SC_BUREAU,
        A.PROB_BHV_1L,
        A.PROB_BHV_2L,
        RATING_BHV_SIMUL_1L,
        RATING_BHV_SIMUL_2L,
        CASE WHEN upper(a.tag_propuesta) = '1ST LAYER' THEN 1 WHEN upper(a.tag_propuesta) = '2ND LAYER' THEN 2 
        WHEN upper(a.tag_propuesta) = '3RD LAYER' THEN 3 ELSE CAST(NULL as INT64) END AS layers,
        parametros_vol.due_days AS due_days,
                CASE
          WHEN upper(a.tipo_persona) = 'PJ' THEN 'LEGAL_PERSON'
          WHEN upper(a.tipo_persona) = 'PF' THEN 'NATURAL_PERSON'
          ELSE 'ERROR'
        END AS person_type,
        CASE WHEN upper(a.tag_oferta) = 'OFERTABLE FULL OFFER' THEN 0 ELSE 1 END AS flag_eo,
        CASE WHEN upper(a.tag_producto) = 'INSTORE' THEN 1 ELSE 0 END AS flag_instore,
        a.flag_on_yellow,
        a.flag_fbm,
        a.tag_tipo_borrower AS tipo_borrower,
        CASE WHEN a.bureau_range IS NULL THEN 'SIN INFO' ELSE a.bureau_range END AS bureau_range,
        a.old_q_props,
        a.tpv_LC_15D,
        a.tpv_LC_7D

      FROM
        `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_JARVIS` AS a
        CROSS JOIN parametros_vol
      WHERE a.sit_site_id IN(
        -- modificar
        parametros_vol.sit_site_id
      )
       AND (a.tag_producto = parametros_vol.param_instore
       OR a.tag_producto = parametros_vol.param_online)
       AND (a.tag_oferta = parametros_vol.param_eo
       OR a.tag_oferta = parametros_vol.param_fo)
       AND (a.tag_propuesta = parametros_vol.param_1st_l
       OR a.tag_propuesta = parametros_vol.param_2nd_l
       OR a.tag_propuesta = parametros_vol.param_3rd_l)
       AND (a.tag_tipo_borrower = parametros_vol.param_new
       OR a.tag_tipo_borrower = parametros_vol.param_old
       OR a.tag_tipo_borrower = parametros_vol.param_new_repeat
       OR a.tag_tipo_borrower = parametros_vol.param_old_repeat
       OR a.tag_tipo_borrower = parametros_vol.param_new_2nd_l
       OR a.tag_tipo_borrower = parametros_vol.param_old_2nd_l
       OR a.tag_tipo_borrower = parametros_vol.param_new_3rd_l
       OR a.tag_tipo_borrower = parametros_vol.param_old_3rd_l)
       AND (parametros_vol.bit_simulacion = 0 AND (a.aprobacion IN( 'APROBABLE') OR a.aprobacion = parametros_vol.param_yellows) OR parametros_vol.bit_simulacion = 1
       AND (a.aprobacion IN( 'APROBABLE', 'CON OFERTA MERCHANTS VIGENTE') OR a.aprobacion = parametros_vol.param_yellows) AND a.max_amount_simulacion > 0);END;



BEGIN
CREATE TEMPORARY TABLE base_encendible_02 AS
SELECT A.*,
    CASE WHEN A.SIT_SITE_ID = 'MLA' AND LAYERS = 1 THEN RATING_BHV_PD_1L 
         WHEN A.SIT_SITE_ID = 'MLA' AND LAYERS >= 2 THEN RATING_BHV_PD_2L
         WHEN A.SIT_SITE_ID = 'MLB' AND LAYERS = 1 THEN RATING_BHV_PD_1L 
         WHEN A.SIT_SITE_ID = 'MLB' AND LAYERS >= 2 THEN RATING_BHV_PD_2L
         WHEN A.SIT_SITE_ID = 'MLM' AND LAYERS = 1 THEN RATING_BHV_PD_1L 
         WHEN A.SIT_SITE_ID = 'MLM' AND LAYERS >= 2 THEN RATING_BHV_PD_2L
         ELSE 'N' END AS RATING,

    CASE WHEN A.SIT_SITE_ID = 'MLA' AND LAYERS = 1 THEN SCORING_BHV_1L_DATE 
         WHEN A.SIT_SITE_ID = 'MLA' AND LAYERS >= 2 THEN SCORING_BHV_2L_DATE
         WHEN A.SIT_SITE_ID = 'MLB' AND LAYERS = 1 THEN SCORING_BHV_1L_DATE 
         WHEN A.SIT_SITE_ID = 'MLB' AND LAYERS >= 2 THEN SCORING_BHV_2L_DATE
         WHEN A.SIT_SITE_ID = 'MLM' AND LAYERS = 1 THEN SCORING_BHV_1L_DATE 
         WHEN A.SIT_SITE_ID = 'MLM' AND LAYERS >= 2 THEN SCORING_BHV_2L_DATE
         ELSE CURRENT_DATE END AS FECHA_SCOREO,

    CASE WHEN A.SIT_SITE_ID IN ('MLA','MLB') THEN A.SC_BUREAU 
         WHEN A.SIT_SITE_ID IN ('MLM') AND LAYERS = 1 THEN CAST((1-A.PROB_BHV_1L)*1000 AS INTEGER) 
         WHEN A.SIT_SITE_ID IN ('MLM') AND LAYERS >= 2 THEN CAST((1-A.PROB_BHV_2L)*1000 AS INTEGER)
         ELSE 1 END SCORE,

CASE WHEN A.SIT_SITE_ID = 'MLA' AND LAYERS = 1 THEN RATING_BHV_SIMUL_1L 
WHEN A.SIT_SITE_ID = 'MLA' AND LAYERS >= 2 THEN RATING_BHV_SIMUL_2L
WHEN A.SIT_SITE_ID = 'MLB' AND LAYERS = 1 THEN RATING_BHV_SIMUL_1L 
WHEN A.SIT_SITE_ID = 'MLB' AND LAYERS >= 2 THEN RATING_BHV_SIMUL_2L
WHEN A.SIT_SITE_ID = 'MLM' AND LAYERS = 1 THEN RATING_BHV_SIMUL_1L 
WHEN A.SIT_SITE_ID = 'MLM' AND LAYERS >= 2 THEN RATING_BHV_SIMUL_2L
ELSE 'N' END AS RATING_POLITICA,

CASE WHEN MAX_AMOUNT >= MAX_CAP AND ROUND(MONTO_CALIFICABLE) >= MAX_AMOUNT THEN ROUND(MONTO_CALIFICABLE) ELSE MAX_AMOUNT END AS CAP_AMOUNT

From base_encendible_03 A
LEFT OUTER JOIN caps_maximos AS c ON a.flag_eo = c.flag_eo
;END;


BEGIN
CREATE TEMPORARY TABLE base_encendible_01 AS
SELECT A.*,
CASE WHEN LENDER_ID_AUX = LENDER_ID1 AND RATING > WORST_RATING_LENDER_ID1 AND RATING <= WORST_RATING_LENDER_ID2 THEN LENDER_ID2
WHEN LENDER_ID_AUX = LENDER_ID2 AND RATING > WORST_RATING_LENDER_ID2 AND RATING <= WORST_RATING_LENDER_ID1 THEN LENDER_ID1
ELSE LENDER_ID_AUX END AS LENDER_ID

From base_encendible_02 A;END;


BEGIN       
CREATE TEMPORARY TABLE check_fecha_scores
  PARTITION BY max_fecha_scoreo
  AS SELECT max(base_encendible_01.fecha_scoreo) AS max_fecha_scoreo FROM base_encendible_01; END;


BEGIN
-- DROP TABLE BASE_ENCENDIBLE;
CREATE TEMPORARY TABLE BASE_ENCENDIBLE   AS
 SELECT
        a.borrower_id,
        A.MAX_AMOUNT,
        CASE WHEN MAX_AMOUNT >= C.MAX_CAP AND ROUND(MONTO_CALIFICABLE) >= MAX_AMOUNT THEN ROUND(MONTO_CALIFICABLE) ELSE MAX_AMOUNT END AS CAP_AMOUNT,
        a.tpv,
        a.rating,
        a.fecha_scoreo,
        a.score,
        a.interest_rate,
        a.max_installments,
        b.product_definition_id,
        a.amortization_system_id,
        a.lender_id,
        a.purpose,
        a.layers,
        a.due_days,
        a.person_type,
        a.rating_politica,
        a.flag_eo,
        a.flag_instore,
        a.flag_on_yellow,
        a.flag_fbm,
        a.tipo_borrower,
        a.bureau_range,
        a.old_q_props,
        A.TNA_PROPOSED_AFO,
        A.tpv_lc_7d,
        case when tpv_lc_7d = 0 then 1  else 0 end flag_tpv_0,
        CASE WHEN D.CUS_CUST_ID_SEL IS NULL THEN 0 ELSE 1 END FLAG_UPSELL
        


      FROM
        base_encendible_01 AS a
        LEFT OUTER JOIN `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_PARAM_PRODUCTS_DEFINITION` AS b ON a.sit_site_id = b.sit_site_id
         AND a.flag_eo = b.flag_eo
         AND a.flag_instore = b.flag_instore
         AND b.flag_active = 1
         AND b.flag_refinancing = 0
         AND b.flag_special_proposal = 0
         AND upper(b.product_type) = 'CREDITO_CUOTA_FIJA'
        LEFT JOIN caps_maximos AS c ON a.flag_eo = c.flag_eo
        LEFT JOIN `meli-bi-data.SBOX_CREDITS_SB.USUARIOS_TEST_UPSELL_HISTORICA` D ON A.BORROWER_ID = D.CUS_CUST_ID_SEL
        CROSS JOIN check_fecha_scores
        CROSS JOIN parametros_vol
      WHERE check_fecha_scores.max_fecha_scoreo > date_sub(current_date(), interval parametros_vol.max_dias_scores_validos DAY);
END;

-- BORROWER_TAG_TEST PARA ESTA TABLA HAY QUE MIGRAR CREDITS_SB.ANALISIS_TEST_MA_MESES_SITES_COMPLETA_OUTLIER DESDE TERADATA PARA EL PROXIMO ENCENDIDO. 
BEGIN CREATE TEMPORARY TABLE BORROWER_TAG_TEST AS SELECT A.* FROM `meli-bi-data.SBOX_CREDITS_SB.BORROWER_ID_ADOPTION` A;
 END; 

-- CREATE  TABLE `meli-bi-data.SBOX_CREDITS_SB.BASE_ENCENDIBLE_ejempl` AS   SELECT * FROM BASE_ENCENDIBLE ;
 -- drop table `meli-bi-data.SBOX_CREDITS_SB.BASE_ENCENDIBLE_MLA_FO_SEPTIEMBRE_GRUPOS_VIEJOS`;
CREATE OR REPLACE TABLE `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS` AS
SELECT A.*,
  B.TAG_TEST,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_1,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_2,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_3,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_4,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_5,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_6,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_7,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_8,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_9,
  CASE WHEN RAND() >0.5 THEN 0 ELSE 1 END AS TAG_TEST_NUEVO_10,
   CASE WHEN A.TNA_PROPOSED_AFO IS NULL THEN 'MODELO NO PROPONE TASA'
     WHEN A.INTEREST_RATE > A.TNA_PROPOSED_AFO THEN 'TASA MA < TASA PA'
     WHEN A.INTEREST_RATE < A.TNA_PROPOSED_AFO THEN 'TASA MA > TASA PA' 
     WHEN A.INTEREST_RATE = A.TNA_PROPOSED_AFO THEN 'TASA MA = TASA PA' 
     ELSE 'NO HAY TASA DE POLÍTICA' END AS TIPO_DIF_TASA

 FROM BASE_ENCENDIBLE A
 LEFT JOIN BORROWER_TAG_TEST B ON A.BORROWER_ID = B.BORROWER_ID;

SELECT FLAG_INSTORE, TAG_TEST_NUEVO_1, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD 
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT  FLAG_INSTORE,TAG_TEST_NUEVO_2, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_3, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_4, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_5, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_6, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_7, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_8, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_9, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;
SELECT FLAG_INSTORE, TAG_TEST_NUEVO_10, TIPO_DIF_TASA, COUNT(BORROWER_ID), SUM(MAX_AMOUNT), SUM(TPV), SUM(MAX_AMOUNT)/SUM(TPV), STDDEV_POP(MAX_AMOUNT) AS STD
FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS`
WHERE TAG_TEST IS NULL AND FLAG_INSTORE = 1 AND FLAG_EO = 0
GROUP BY 1, 2,3;

-- `meli-bi-data.SBOX_CREDITS_SB.BASE_ENCENDIBLE_MLA_FO_SEPTIEMBRE_GRUPOS_VIEJOS_Y_NUEVOS_SIN_TNA` 

CREATE TEMPORARY TABLE ARMADO_DE_GRUPOS_0 AS  
  SELECT
  A.*, 
  CASE 
       WHEN  A.FLAG_EO = 1 THEN 0 
       WHEN  B.TAG_TEST = 'MA' THEN 1 
       WHEN  B.TAG_TEST = 'PA' THEN 0 
       ELSE 3 END TAG_TEST_VIEJO,

   CASE WHEN  A.FLAG_EO = 1 THEN 0 
   WHEN (B.TAG_TEST IS NULL OR B.TAG_TEST = 'NO') AND TIPO_DIF_TASA = 'TASA MA < TASA PA' THEN TAG_TEST_NUEVO_1
       WHEN (B.TAG_TEST IS NULL OR B.TAG_TEST = 'NO') AND TIPO_DIF_TASA = 'TASA MA > TASA PA' THEN TAG_TEST_NUEVO_1
       WHEN (B.TAG_TEST IS NULL OR B.TAG_TEST = 'NO') AND TIPO_DIF_TASA = 'TASA MA = TASA PA' THEN TAG_TEST_NUEVO_5
       WHEN (B.TAG_TEST IS NULL OR B.TAG_TEST = 'NO') AND TNA_PROPOSED_AFO IS NULL THEN 2
     ELSE 3 END AS TAG_TEST_NUEVO
         
  FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS` A
  LEFT JOIN BORROWER_TAG_TEST B ON A.BORROWER_ID = B.BORROWER_ID
  -- LEFT JOIN CREDITS_SB.TASA_AFO_X_PLAZO C ON A.BORROWER_ID = C.CUS_CUST_ID_SEL
; 
CREATE TEMPORARY TABLE ARMADO_DE_GRUPOS_1 AS  
  SELECT A.*,
     CASE 
          WHEN A.FLAG_EO = 1 THEN 0 
          WHEN TAG_TEST_VIEJO IN (0,1) THEN TAG_TEST_VIEJO
          WHEN TAG_TEST_NUEVO IN (0,1,2) THEN TAG_TEST_NUEVO
          ELSE 3 END TAG_TEST_FINAL

          FROM  ARMADO_DE_GRUPOS_0 A;  

-- DROP TABLE `meli-bi-data.SBOX_CREDITS_SB.BASE_ENCENDIBLE_MLA_FO_SEPTIEMBRE_GRUPOS_VIEJOS_Y_NUEVOS_SIN_TNA`;
CREATE OR REPLACE TABLE `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS_Y_NUEVOS_SIN_TNA` AS 
  SELECT A.*,
    CASE WHEN A.FLAG_EO = 1 THEN INTEREST_RATE 
      WHEN FLAG_INSTORE = 0 THEN INTEREST_RATE 
      WHEN TAG_TEST_FINAL = 0 THEN INTEREST_RATE  
      WHEN (TAG_TEST_FINAL = 1 AND TNA_PROPOSED_AFO IS NOT NULL)THEN TNA_PROPOSED_AFO 
      ELSE INTEREST_RATE END TNA_FINAL
          FROM  ARMADO_DE_GRUPOS_1 A;  

-- AHORA HAY QUE CALCULAR TASA POR PLAZO:
-- drop table `meli-bi-data.SBOX_CREDITS_SB.BASE_ENCENDIBLE_MLA_FO_SEPTIEMBRE_GRUPOS_VIEJOS_Y_NUEVOS_SIN_TNA`;
CREATE OR REPLACE TABLE `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FINAL_FO_OCTUBRE` AS  
SELECT
  A.BORROWER_ID,
  A.MAX_AMOUNT,
  A.CAP_AMOUNT,
  TPV,
  CAST(A.RATING AS string) AS RATING,
  A.SCORE,
  A.INTEREST_RATE,
  A.MAX_INSTALLMENTS,
  A.PRODUCT_DEFINITION_ID,
  A.AMORTIZATION_SYSTEM_ID,
  A.LENDER_ID,
  A.PURPOSE,
  A.LAYERS,
  A.DUE_DAYS,
  A.PERSON_TYPE,
  A.RATING_POLITICA,
  A.FLAG_EO,
  A.FLAG_INSTORE,
  A.FLAG_ON_YELLOW,
  A.FLAG_FBM,
  A.TIPO_BORROWER,
  A.OLD_Q_PROPS,
  A.flag_tpv_0,
  A.FLAG_UPSELL,
--   A.TAG_PLATFORM,
  A.TAG_TEST_FINAL,
  A.TNA_PROPOSED_AFO,
  A.TNA_FINAL,
  B.TNA_1M AS INTEREST_RATE_1_INSTALLMENTS,
  B.TNA_3M AS INTEREST_RATE_3_INSTALLMENTS,
  B.TNA_6M AS INTEREST_RATE_6_INSTALLMENTS,
  B.TNA_9M AS INTEREST_RATE_9_INSTALLMENTS,
  B.TNA_12M AS INTEREST_RATE_12_INSTALLMENTS
  
  FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS_Y_NUEVOS_SIN_TNA` A
  LEFT JOIN `meli-bi-data.SBOX_CREDITS_SB.TASA_FINAL_X_PLAZO_MLA_FO`  B ON B.BORROWER_ID = A.BORROWER_ID; 

/** EXPORTACION DE LA BASE **/
select * 
from `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FINAL_FO_OCTUBRE` 
where 1=1
  and flag_tpv_0 = 0
  and FLAG_UPSELL = 0
  

BEGIN
CREATE TEMPORARY TABLE BASE_FUNNEL_Y_LOGGEO AS
  SELECT
    A.SIT_SITE_ID,
    A.CUS_CUST_ID_SEL AS BORROWER_ID,
    A.TAG_PRODUCTO,
    A.TAG_OFERTA,
    A.TAG_PROPUESTA,
    A.TAG_TIPO_BORROWER,
    A.MAX_AMOUNT_SIMULACION AS MAX_AMOUNT,
    CAST(A.MONTHLY_TPV_LC AS numeric) AS TPV,
    CASE WHEN B.BORROWER_ID IS NULL THEN A.APROBACION ELSE 'APROBABLE' END AS APROBACION
 FROM `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_JARVIS`  A 
    LEFT JOIN BASE_ENCENDIBLE B ON A.CUS_CUST_ID_SEL = B.BORROWER_ID
    CROSS JOIN check_fecha_scores 
    CROSS JOIN parametros_vol
      WHERE a.sit_site_id IN( parametros_vol.sit_site_id)
       AND (a.tag_producto = parametros_vol.param_instore
       OR a.tag_producto = parametros_vol.param_online)
       AND (a.tag_oferta = parametros_vol.param_eo
       OR a.tag_oferta = parametros_vol.param_fo)
       AND (a.tag_propuesta = parametros_vol.param_1st_l
       OR a.tag_propuesta = parametros_vol.param_2nd_l
       OR a.tag_propuesta = parametros_vol.param_3rd_l)
       AND (a.tag_tipo_borrower = parametros_vol.param_new
       OR a.tag_tipo_borrower = parametros_vol.param_old
       OR a.tag_tipo_borrower = parametros_vol.param_new_repeat
       OR a.tag_tipo_borrower = parametros_vol.param_old_repeat
       OR a.tag_tipo_borrower = parametros_vol.param_new_2nd_l
       OR a.tag_tipo_borrower = parametros_vol.param_old_2nd_l
       OR a.tag_tipo_borrower = parametros_vol.param_new_3rd_l
       OR a.tag_tipo_borrower = parametros_vol.param_old_3rd_l)
AND CHECK_FECHA_SCORES.MAX_FECHA_SCOREO > (CURRENT_DATE - PARAMETROS_VOL.MAX_DIAS_SCORES_VALIDOS) ;
END;

CREATE OR REPLACE TABLE `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_FUNNEL_Y_LOGGEO_FO_OCTUBRE` AS  SELECT * FROM BASE_FUNNEL_Y_LOGGEO ;









-- GUARDAMOS EN UNA SB LA JARVIS_HIST -- VER ESTE PUNTO COMO SE VA A HACER EL INSERT

CREATE  TABLE `meli-bi-data.SBOX_CREDITS_SB.MC_JARVIS_SITEXXX_PRODUCTO_YYYYMM` AS
SELECT 
A.SIT_SITE_ID, TPV_COLLECTABLE_OP_RATIO, TPV_LC_COLLECTABLE_OP_L3M, FLAG_FOZ_DO_IGUAZU, RATING_SALES_FORECAST, TNA_PROPOSED_AFO, DOCUMENTO, TPV_LC_AVG_LY, APROBACION_BABY_DE, CUS_CUST_ID_SEL, FLAG_ASESORADO, MAX_AMOUNT_BABY_DE, RCI_OPEN_MARKET, TNA_1L_ACTIVE, MAX_AMOUNT_PPV, KILLER_ESPECIAL_PPV, SUM_AMOUNT_FINISHED_CREDIT, FLAG_CF_PPV_EVER, Q_FINISHED_CRED, CRED_AMOUNT_1L_ACTIVE, OLD_Q_DAYS_DE, TPV_USD_MPOS_LY, TPV_LC_M4, TAG_PRODUCTO, FLAG_RESTRINGIDO, OLD_Q_PROPS, CUOTA_MAX_OPEN_MARKET, SITUACION_ACTIVE_CRED, RANK_PROPOSAL_AFO, KILLER_OFERTA_INSIGNIFICANTE_OPEN_MARKET, CAP_DE, PROB_BARBOL, Q_CUOTAS_IMPAGAS_1L_ACTIVE, RANGO_TPN_MPOS_M1, Q_KILLERS_DE, PROB_BHV_OM, MAX_AMOUNT_SIMULACION, TPV_EXTERNAL_AMOUNT_BOOST_SMOOTHED_MONTHLY, KILLER_PPV_PLAZO_ERROR, CAP, LAST_PROPOSAL_DATE, FLEX_2L_ACTIVE, APROBACION, AVG_ATRASO_ACTIVE_CRED, MONTHLY_TPV_LC, TNA_LAST_PROPOSAL, TPV_USD_GATEWAY_LY, FLAG_PPV_ACTIVE_CRED, RATING_ADOPTION_ACQUISITION, MONTO_CALIFICABLE_PPV, KILLER_CBT, MAX_AMOUNT_SIMULACION_OPEN_MARKET, FLAG_MIA, KILLER_CRD_MORA, TPV_LC_M2, Q_CUOTAS_PAGAS_1L_ACTIVE, KILLER_REFI_EVER, TPV_LC_M1_QR, TPV_USD_OFF_L3M, FLAG_POINT_PRO, TAG_CARTERA_ASESORADA, KILLER_BARBOL, KILLER_ALTO_RIESGO_BHV, MONTO_CALIFICABLE, MAX_AMOUNT_SIMULACION_PPV, APROBACION_DE, KILLER_SIN_SCR, RCI_PPV, SC_BUREAU, FLAG_CORONAVOUCHER, PROP_AMOUNT_LAST_PROPOSAL, MAX_AMOUNT, KILLER_OFERTA_3L_INCONSISTENTE_PPV, CUOTA_MAX_SIMULACION_OPEN_MARKET, KILLER_SIN_VENTAS_L7D_BABY_DE, CUS_PHONE, Q_KILLERS_ESPECIALES_PPV, FLAG_BLACKLIST, KILLER_PERIODO_DEMASIADO_CORTO_OPEN_MARKET, TPV_USD_AVG_LY, KILLER_OFERTA_2L_INCONSISTENTE_PPV, KILLER_SIN_POLITICA_DE, KILLER_OFERTA_1L_INCONSISTENTE, GRUPO_MIA, TAG_TIPO_BORROWER_DE, LAST_ADOP_DATE_FINISHED_CRED, KILLER_CREDITO_CONSUMERS, MAX_REPAYMENT_PERCENTAGE, TPV_USD_QR_LY, TPV_LC_15D, FLAG_GRAYLIST_AGRUPACION, Q_ADOPTED_CRED_DE, BOOST_GATEWAY, FLAG_GRAYLIST, PROB_ADOPTION_ACQUISITION, WEEKLY_TPV_MULTIPLIER_BABY_DE, AUD_INS_DT_DE, MONTO_CALIFICABLE_SIMULACION_PPV, TPV_USD_LY, TNA_PPV, CONSEC_ACTIVITY_LY, FLAG_RECURRING_INFORMATION, TPV_LC_OP_L3M, TAG_OFERTA_BABY_DE, KILLER_RESTRINGIDO, TAG_OPEN_MARKET, MAX_ATRASO_ACTIVE_CRED, KILLER_PPPI, WEEKLY_TPV_MULTIPLIER_DE_BASELINE, SUM_AMOUNT_ACTIVE_CRED, PROP_AMOUNT_DE, APROBACION_PPV, Q_KILLERS_BABY_DE, FLAG_ON_FREEMIUM, RATING_BHV_PD_1L, TNA_DE_ACTIVE, FLAG_CBT, AVG_CREDIT_LENGTH_DE, FLAG_REGION_CENTRAL_DE_SAN_PABLO, KILLER_ATRASO_HASTA_30D, TPV_LC_M6, FLAG_NOT_2FA, TAG_OFERTA_REAL, KILLER_OFERTA_INSIGNIFICANTE_DE, TNA_BABY_DE, EMAIL, KILLER_RATING_MAL, KILLER_OFERTA_2L_INCONSISTENTE, KILLER_TRAVAS_RECIVIBLES, RATING_BHV_PD_2L, TAG_OFERTA, FLAG_PROP_BABY_DE, FLAG_FDV, FLAG_BLACKLIST_AGRUPACION, TPV_EXTERNAL_AMOUNT_SMOOTHED_MONTHLY, TAG_OFERTA_DE, SCORING_BHV_2L_DATE, RATIO_GATEWAY, KILLER_OFERTA_MC_VIGENTE_DE, TAG_POINT, PROB_ADOPTION_AFO, MONTO_CALIFICABLE_SIMULACION, DESC_GRAYLIST, KILLER_OFERTA_INSIGNIFICANTE, WEEKLY_TPV_LC_SMOOTHED_BABY_DE, KILLER_SIN_SCORE_CHURN, KILLER_ACTIVIDAD, Q_ADOPTED_CRED_DE_L9M, MAX_INSTALLMENTS, AUD_INS_DT, KILLER_SIN_SCORE_BHV, PROB_SALES_FORECAST, BARBOL_MODEL, ACTIVITY, KILLER_OFERTA_MC_VIGENTE, AVG_ATRASO_FINISHED_CRED, RATING_BHV_PD_OM, RATIO_FBM, KILLER_SIN_POLITICA_BABY_DE, Q_DEVICES, TNA, KILLER_OFERTA_INSIGNIFICANTE_PPV, KILLER_CHURNEO_EVER, SALES_AVG_LY, KILLER_OFERTA_3L_INCONSISTENTE, TPV_EXTERNAL_AMOUNT_MONTHLY, DESC_BLACKLIST, CUST_AGRUPACION, KILLER_SIN_LICENCIA, KILLER_OFERTA_INSIGNIFICANTE_BABY_DE, Q_KILLERS_ESPECIALES, BUREAU_RANGE, RATING_BHV_SIMUL_OM, KILLER_UIF1, FLAG_ACTIVE_LAST_PROPOSAL, KILLER_CREDITO_PPV_VIGENTE, TPV_USD_MPOS_L3M, Q_CUOTAS_IMPAGAS_2L_ACTIVE, KILLER_OFERTA_1L_INCONSISTENTE_PPV, TAG_TIPO_BORROWER, KILLER_SIT_AFIP_MAL, FLAG_RESTRINGIDO_FUERTEMENTE, KILLER_DEFAULT, FLAG_DE, KILLER_DOWNGRADE_DESDE_FO, SPREAD_PROPOSAL_AFO, Q_KILLERS, RATING_BHV_SIMUL_1L, TPV_TRAVADO, APROBACION_OM, FLAG_ON_YELLOW, PROB_ADOPTION_FORECAST, KILLER_BLACKLIST, CONSEC_ACTIVITY_QR, TPV_USD_OFF_LY, SCORING_BARBOL_DATE, SALES_GROWTH_PERCENTAGE, TIPO_DEVICE, TPV_EXTERNAL_AMOUNT, TPV_LC_SMOOTHED_ADJ_15D, MONTO_CALIFICABLE_SIMULACION_OPEN_MARKET, FLAG_MONOTRIBUTO, CAP_PPV, CAP_MAXIMO_BABY_DE, KILLER_SIN_SCORE_BHV_RECIENTE, CONSEC_ACTIVITY_MPOS, WEEKLY_TPV_MULTIPLIER_DE_GAMIFICATION, TPV_EXTERNAL_LAST_DATE, SEMAFORO, Q_CUOTAS_PAGAS_2L_ACTIVE, Q_DENUN_PPPI_L3M, KILLER_OFERTA_CONSUMERS, NICKNAME, TPV_USD_QR_L3M, MAX_AMOUNT_OPEN_MARKET, MONTO_CALIFICABLE_OPEN_MARKET, KILLER_SEMAFORO, PROB_CHURN, TPV_LC_SMOOTHED, LAST_APPLICATION_ID, FLAG_FBM, MAX_INSTALLMENTS_PPV, RATIO_CLAIMS, SCORING_BHV_OM_DATE, INDUSTRIA, TNA_LAST_FINISHED_CRED, TPV_LC_M1_MPOS, FLAG_FBM_ANY_LY, KILLER_ALTO_RIESGO_CHURN, Q_ACTIVE_CRED, TPV_LC_7D, KILLER_ESPECIAL_DE, KILLER_OFERTA_MC_VIGENTE_BABY_DE, TPV_LC_M1, FLAG_CLAIMS, RATING_BHV_SIMUL_2L, KILLER_GRADUADO_FLUJOS_BAU_BABY_DE, KILLER_SIN_INFO_EXTERNA_OPEN_MARKET, AVG_CREDIT_LENGTH_DE_L9M, TPV_LC_M5, SCORING_SALES_FORECAST_DATE, MAX_AMOUNT_DE, KILLER_ON_FREEMIUM, TPV_USD_COLLECTABLE_OP_L3M, PROB_ADOPTION_BASE_AFO, TPV_LC_M3, WEEKLY_ACTIVITY_L3M, SCORING_BHV_1L_DATE, RATING_CHURN, PROB_BHV_2L, FLAG_SEMAFORO_MAL, KILLER_DATOS_BUREAU, WEEKLY_TPV_LC, MIN_PROP_AMOUNT, TPN_MPOS_M1, FLAG_RUA_25_DE_MARZO, KILLER_ESPECIAL, KILLER_SIN_POLITICA_OPEN_MARKET, PROP_AMOUNT_LAST_FINISHED_CRED, TPV_USD_ON_LY, TNA_2L_ACTIVE, Q_CUENTAS_VINCULADAS, CRED_AMOUNT_2L_ACTIVE, PLAZO_PPV, TOTAL_SALES_LY, SCORING_ADOPTION_FORECAST_DATE, MAX_INSTALLMENTS_OPEN_MARKET, PROP_AMOUNT_1L_ACTIVE, KILLER_SIN_CADASTRO, MODE_CREDIT_LENGTH_DE, Q_KILLERS_ESPECIALES_DE, TAG_PLATFORM, TPV_LC_LY, TPV_EXTERNAL_FIRST_DATE, FLAG_DOC_VERIF_CBU, KILLER_PERIODO_DEMASIADO_ANTIG_OPEN_MARKET, KILLER_RATING_MAL_OPEN_MARKET, TNA_OPEN_MARKET, LAST_APPLICATION_DATE, FLAG_POTENCIAL_FRAUDE_ME, TNA_LIST_CF, KILLER_MONTO, KILLER_FRAUDE_ME, TPV_LC_AVG_6M, DESCRIPCION_KILLER_ESPECIAL, DESCRIPCION_KILLER_ESPECIAL_PPV, TPV_USD_ON_L3M, INST_TOTAL_DEBT_BALANCE, TNA_LIST_PPV, TAG_TPV_SEGMENT_M1, MERCHANT_MARK, TAG_TPV_SEGMENT_L3M, KILLER_HIGH_RISK, CAP_OPEN_MARKET, TAG_PROPUESTA, MAX_ATRASO_FINISHED_CRED, SCORING_CHURN_DATE, PROP_AMOUNT_2L_ACTIVE, TAG_OFERTA_SITUACION, FLAG_REFI_EVER, TPV_EXTERNAL_AMOUNT_BOOST_MONTHLY, FLAG_PPPI, MAX_ATRASO_CRED_DE, TIPO_PERSONA, SALES_MONOTRIBUTO_LC_LY, KILLER_CLAIMS, TAG_CONSUMER_CREDITS_ACTIVE_EVER, FLAG_SIT_AFIP_MAL, PROB_BHV_1L, AUD_INS_DT_OM, KILLER_SIN_POLITICA, KILLER_ACTIVE_CRED_NO_MADURO, KILLER_SIN_SCORE_CHURN_RECIENTE, KILLER_ACTIVIDAD_BABY_DE, KILLER_PPV_FORMULA_ORIGINAL_ERROR, RCI, MIN_PROP_AMOUNT_PPV, DIAS_DE_MORA_ACTUAL_ACTIVE_CRED, LAST_ADOP_DATE_ACTIVE_CRED, Q_KILLERS_PPV, DEBT_BALANCE, TPV_LC_AVG_3M, KILLER_GRAYLIST, DESCRIPCION_KILLER_ESPECIAL_DE, TNA_DE, SCORING_ADOPTION_ACQUISITION_DATE, PRIORITY_ADOPTION_FORECAST, TPV_USD_OP_L3M, KILLER_CUENTAS_VINCULADAS_BABY_DE, KILLER_ACTIVIDAD_DE, FLAG_DE_BAU_EVER, FLEX_1L_ACTIVE, 'ENCENDIDO' AS TIPO_LOGGEO
  FROM
    CREDITS.MC_JARVIS A
  WHERE
    CUS_CUST_ID_SEL IN (SELECT BORROWER_ID FROM BASE_FUNNEL_Y_LOGGEO)
    AND PARAMETROS_VOL.BIT_LOGGEAR = 1; 
     

select aud_ins_dt from `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_JARVIS` group by 1;
