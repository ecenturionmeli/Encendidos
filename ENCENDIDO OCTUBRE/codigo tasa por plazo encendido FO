BEGIN
CREATE TEMPORARY TABLE BASE_SELLERS_PARA_POLITICA AS

WITH BASE_SELLERS_PARA_POLITICA_STG AS
(
SELECT    SIT_SITE_ID,
          CUS_CUST_ID_SEL,
          --TAGs y FLAGs
          CASE WHEN TAG_OFERTA = 'OFERTABLE FULL OFFER' THEN 0 ELSE 1 END AS FLAG_EO,
          CASE WHEN TAG_PRODUCTO = 'INSTORE' THEN 1 ELSE 0 END AS FLAG_INSTORE,
          CASE WHEN TAG_PROPUESTA = '1ST LAYER' THEN 1
               WHEN TAG_PROPUESTA = '2ND LAYER' THEN 2
               WHEN TAG_PROPUESTA = '3RD LAYER' THEN 3
               ELSE NULL
          END AS LAYER,
          A.* EXCEPT(SIT_SITE_ID, CUS_CUST_ID_SEL)
  FROM    `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_JARVIS_SCORING` A
  WHERE   TAG_OFERTA <> 'NO OFERTABLE'

)
SELECT    SIT_SITE_ID,
          CUS_CUST_ID_SEL,
          --TAGs y FLAGs
          FLAG_EO,
          FLAG_INSTORE,
          LAYER,
          TAG_PLATFORM,
          TAG_POINT,
          TAG_TIPO_BORROWER AS BORROWER_TYPE,
          TAG_CARTERA_ASESORADA,
          TAG_CONSUMER_CREDITS_ACTIVE_EVER,
          TAG_TPV_SEGMENT_M1,
          TAG_TPV_SEGMENT_L3M,
          TAG_OFERTA_SITUACION,
          FLAG_MIA,
          FLAG_DE,
          FLAG_ON_YELLOW,
          FLAG_MONOTRIBUTO,
          FLAG_POINT_PRO,
          FLAG_FBM,
          COALESCE(FLAG_ACTIVE_LAST_PROPOSAL,0) AS FLAG_PROP_CUOTA_FIJA,
          -- Datos duros
          INDUSTRIA,
          BUREAU_RANGE,
          RATIO_FBM,
          TIPO_DEVICE,
          TIPO_PERSONA,
          -- Relativo al tpv e historial crediticio
          CONSEC_ACTIVITY_LY,
          CONSEC_ACTIVITY_MPOS,
          CONSEC_ACTIVITY_QR,
          MONTHLY_TPV_LC,
          TPV_COLLECTABLE_OP_RATIO,
          OLD_Q_PROPS,

          CASE WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_SIMUL_1L)
               WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_SIMUL_2L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_SIMUL_1L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_SIMUL_2L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_SIMUL_1L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_SIMUL_2L)
               WHEN SIT_SITE_ID = 'MLC' AND FLAG_EO = 0                      THEN UPPER(RATING_CHURN)
               WHEN SIT_SITE_ID = 'MCO' AND FLAG_EO = 0                      THEN UPPER(RATING_CHURN)
               WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_SIMUL_1L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_SIMUL_1L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_SIMUL_1L)
               WHEN SIT_SITE_ID = 'MLC' AND FLAG_EO = 1                      THEN UPPER(RATING_CHURN)
               WHEN SIT_SITE_ID = 'MCO' AND FLAG_EO = 1                      THEN UPPER(RATING_CHURN)
               ELSE NULL
          END AS RATING_SIMUL,
          CASE WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_PD_2L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_PD_2L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_PD_2L)
               WHEN SIT_SITE_ID = 'MLC' AND FLAG_EO = 0                      THEN UPPER(RATING_CHURN)
               WHEN SIT_SITE_ID = 'MCO' AND FLAG_EO = 0                      THEN UPPER(RATING_CHURN)
               WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLC' AND FLAG_EO = 1                      THEN UPPER(RATING_CHURN)
               WHEN SIT_SITE_ID = 'MCO' AND FLAG_EO = 1                      THEN UPPER(RATING_CHURN)
               ELSE NULL
          END AS RATING_PD,
          RATING_CHURN,
          PROB_CHURN,
          CASE WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_PD_2L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_PD_2L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 0 AND LAYER IN (1)     THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 0 AND LAYER IN (2,3)   THEN UPPER(RATING_BHV_PD_2L)
               WHEN SIT_SITE_ID = 'MLA' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLB' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_PD_1L)
               WHEN SIT_SITE_ID = 'MLM' AND FLAG_EO = 1                      THEN UPPER(RATING_BHV_PD_1L)
               ELSE NULL
          END AS RATING_BHV,
          RATING_SALES_FORECAST
  FROM    BASE_SELLERS_PARA_POLITICA_STG;
  END;

  select count(*) from BASE_SELLERS_PARA_POLITICA;

-----------------------------------------------------------------
-- CAPs de TNA
-----------------------------------------------------------------

CREATE TEMPORARY TABLE TNA_CAPS_1 AS
  SELECT  A.SIT_SITE_ID,
          A.CUS_CUST_ID_SEL,
          B.PRODUCT_TYPE,
          B.TNA_MIN,
          B.TNA_MAX
    FROM  BASE_SELLERS_PARA_POLITICA A
    LEFT JOIN `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_PARAM_TNA_CAPS` B
                                        ON ((A.SIT_SITE_ID = B.SIT_SITE_ID    OR B.SIT_SITE_ID IS NULL) AND
                                            (A.FLAG_EO = B.FLAG_EO            OR B.FLAG_EO IS NULL)     AND
                                            (A.TAG_CONSUMER_CREDITS_ACTIVE_EVER = B.TAG_CONSUMER_CREDITS_ACTIVE_EVER OR B.TAG_CONSUMER_CREDITS_ACTIVE_EVER IS NULL) AND
                                            (A.TAG_TPV_SEGMENT_M1   = B.TAG_TPV_SEGMENT_M1   OR B.TAG_TPV_SEGMENT_M1   IS NULL) AND
                                            (A.TAG_TPV_SEGMENT_L3M  = B.TAG_TPV_SEGMENT_L3M  OR B.TAG_TPV_SEGMENT_L3M  IS NULL) AND
                                            (A.TAG_OFERTA_SITUACION = B.TAG_OFERTA_SITUACION OR B.TAG_OFERTA_SITUACION IS NULL) AND
                                            (A.RATING_SIMUL = B.RATING_SIMUL                 OR B.RATING_SIMUL IS NULL))
;
select count(*) from TNA_CAPS_1;

CREATE TEMPORARY TABLE TNA_CAPS AS
SELECT
    A.SIT_SITE_ID,
    A.CUS_CUST_ID_SEL,
    A.PRODUCT_TYPE,
    MAX(A.TNA_MIN) AS TNA_MIN,
    MIN(A.TNA_MAX) AS TNA_MAX
  FROM
    TNA_CAPS_1 A
  GROUP BY 1,2,3;
-----------------------------------------------------------------------------------------------------
-- TASA POR PLAZO
-----------------------------------------------------------------------------------------------------

-- Apertura de Tasa por Plazo: calculado luego de la re-definicion de la oferta para MLC
CREATE TEMPORARY TABLE MC_PARAM_INSTALLMENTS(INSTALLMENTS INTEGER);
INSERT MC_PARAM_INSTALLMENTS VALUES (1);
INSERT MC_PARAM_INSTALLMENTS VALUES (3);
INSERT MC_PARAM_INSTALLMENTS VALUES (6);
INSERT MC_PARAM_INSTALLMENTS VALUES (9);
INSERT MC_PARAM_INSTALLMENTS VALUES (12);
INSERT MC_PARAM_INSTALLMENTS VALUES (18);
INSERT MC_PARAM_INSTALLMENTS VALUES (24);
INSERT MC_PARAM_INSTALLMENTS VALUES (30);
INSERT MC_PARAM_INSTALLMENTS VALUES (36);

SELECT COUNT(*) FROM MC_PARAM_INSTALLMENTS;
CREATE TEMPORARY TABLE TNAS_X_INSTALLMENTS_1 AS
  SELECT  A.SIT_SITE_ID,
          A.CUS_CUST_ID_SEL,
          A.FLAG_EO,
          A.RATING_SIMUL,
          TI.INST_DECREASE_COEF,
          TI.INST_STOP_DECREASE,
          TI.PRODUCT_TYPE
    FROM  BASE_SELLERS_PARA_POLITICA A
LEFT JOIN `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_PARAM_TNAS_X_INSTALLMENTS` TI
                   ON (A.SIT_SITE_ID = TI.SIT_SITE_ID       OR TI.SIT_SITE_ID IS NULL)
                  AND (A.FLAG_EO = TI.FLAG_EO               OR TI.FLAG_EO IS NULL)
                  AND (A.FLAG_INSTORE = TI.FLAG_INSTORE     OR TI.FLAG_INSTORE IS NULL)
                  AND (A.LAYER = TI.LAYER                   OR TI.LAYER IS NULL)
                  AND (A.FLAG_ON_YELLOW = TI.FLAG_ON_YELLOW OR TI.FLAG_ON_YELLOW IS NULL)
                  AND (A.BORROWER_TYPE = TI.BORROWER_TYPE   OR TI.BORROWER_TYPE IS NULL)
                  AND (A.RATING_SIMUL = TI.RATING           OR TI.RATING IS NULL)
                  AND (A.BUREAU_RANGE = TI.BUREAU_RANGE     OR TI.BUREAU_RANGE IS NULL)
                  AND (A.FLAG_FBM = TI.FLAG_FBM             OR TI.FLAG_FBM IS NULL)
                  AND (A.TAG_PLATFORM = TI.TAG_PLATFORM     OR TI.TAG_PLATFORM IS NULL)
                  AND (A.TAG_CONSUMER_CREDITS_ACTIVE_EVER = TI.TAG_CONSUMER_CREDITS_ACTIVE_EVER OR TI.TAG_CONSUMER_CREDITS_ACTIVE_EVER IS NULL)
                  AND (A.TAG_TPV_SEGMENT_M1 = TI.TAG_TPV_SEGMENT_M1       OR TI.TAG_TPV_SEGMENT_M1 IS NULL)
                  AND (A.TAG_TPV_SEGMENT_L3M = TI.TAG_TPV_SEGMENT_L3M     OR TI.TAG_TPV_SEGMENT_L3M IS NULL)
                  AND (A.TAG_OFERTA_SITUACION = TI.TAG_OFERTA_SITUACION   OR TI.TAG_OFERTA_SITUACION IS NULL)
                  AND (A.TAG_CARTERA_ASESORADA = TI.TAG_CARTERA_ASESORADA OR TI.TAG_CARTERA_ASESORADA IS NULL)
;

select count(*) from TNAS_X_INSTALLMENTS_1;


CREATE TEMPORARY TABLE PARAM_TNAS_X_INSTALLMENTS AS
  SELECT  A.SIT_SITE_ID,
          A.CUS_CUST_ID_SEL,
          A.PRODUCT_TYPE,
          A.INST_DECREASE_COEF,
          A.INST_STOP_DECREASE
    FROM  TNAS_X_INSTALLMENTS_1 A
QUALIFY ROW_NUMBER() OVER(PARTITION BY CUS_CUST_ID_SEL, PRODUCT_TYPE ORDER BY INST_DECREASE_COEF, INST_STOP_DECREASE DESC) = 1;

CREATE TEMPORARY TABLE TNA_X_INSTALLMENTS AS
WITH TNA_X_INSTALLMENTS_STG AS
(
  SELECT  T.BORROWER_ID,
          -- T.SIT_SITE_ID,
          -- T.PRODUCT_TYPE,
          TI.INST_DECREASE_COEF,
          T.MAX_INSTALLMENTS,
          T.TNA_FINAL,
          A.INSTALLMENTS,
          TNA_MIN,
          TNA_MAX,
          CASE  WHEN A.INSTALLMENTS >= COALESCE(TI.INST_STOP_DECREASE, 0)
                  THEN A.INSTALLMENTS ELSE COALESCE(TI.INST_STOP_DECREASE, 0)
          END INST_REF
 
 -- SIEMPRE ACTUALIZAR LOS DATOS A LA BASE QUE ESTEMOS USANDO
    FROM  `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_FO_OCTUBRE_GRUPOS_VIEJOS_Y_NUEVOS_SIN_TNA` T -- esto es para FO
    -- FROM `meli-bi-data.SBOX_CREDITS_SB.EMI_BASE_ENCENDIBLE_EO_0510` T -- esto es para EO

LEFT JOIN PARAM_TNAS_X_INSTALLMENTS TI   ON T.BORROWER_ID = TI.CUS_CUST_ID_SEL
--                                        AND T.PRODUCT_TYPE    = TI.PRODUCT_TYPE
INNER JOIN MC_PARAM_INSTALLMENTS    A    ON T.MAX_INSTALLMENTS >= A.INSTALLMENTS
LEFT JOIN  TNA_CAPS C                    ON T.BORROWER_ID = C.CUS_CUST_ID_SEL
--                                        AND T.PRODUCT_TYPE    = C.PRODUCT_TYPE
)
  SELECT  A.BORROWER_ID,
          -- A.SIT_SITE_ID,
          -- A.PRODUCT_TYPE,
          A.INST_DECREASE_COEF,
          A.MAX_INSTALLMENTS,
          A.INSTALLMENTS,
          A.INST_REF,
          CASE  WHEN CAST(FLOOR(TNA_FINAL - (COALESCE(A.INST_DECREASE_COEF, 0) * (MAX_INSTALLMENTS - INST_REF))) AS INTEGER) < TNA_MIN AND TNA_MIN IS NOT NULL
                  THEN TNA_MIN
                WHEN CAST(FLOOR(TNA_FINAL - (COALESCE(A.INST_DECREASE_COEF, 0) * (MAX_INSTALLMENTS - INST_REF))) AS INTEGER) > TNA_MAX AND TNA_MAX IS NOT NULL
                  THEN TNA_MAX
                ELSE CAST(FLOOR(TNA_FINAL - (COALESCE(A.INST_DECREASE_COEF, 0) * (MAX_INSTALLMENTS - INST_REF))) AS INTEGER)
          END TNA_INST
    FROM  TNA_X_INSTALLMENTS_STG A;  


CREATE TEMPORARY TABLE BORROWERS AS SELECT BORROWER_ID FROM TNA_X_INSTALLMENTS;
CREATE TEMPORARY TABLE TNA_PLAZO_1 AS SELECT BORROWER_ID,  TNA_INST AS TNA_1M  FROM TNA_X_INSTALLMENTS where INSTALLMENTS = 1;
CREATE TEMPORARY TABLE TNA_PLAZO_3 AS SELECT BORROWER_ID,  TNA_INST AS TNA_3M FROM TNA_X_INSTALLMENTS where INSTALLMENTS = 3;
CREATE TEMPORARY TABLE TNA_PLAZO_6 AS SELECT BORROWER_ID,  TNA_INST AS TNA_6M FROM TNA_X_INSTALLMENTS where INSTALLMENTS = 6;
CREATE TEMPORARY TABLE TNA_PLAZO_9 AS SELECT BORROWER_ID,  TNA_INST AS TNA_9M FROM TNA_X_INSTALLMENTS where INSTALLMENTS = 9;
CREATE TEMPORARY TABLE TNA_PLAZO_12 AS SELECT BORROWER_ID,  TNA_INST AS TNA_12M FROM TNA_X_INSTALLMENTS where INSTALLMENTS = 12;

 CREATE OR REPLACE TABLE `meli-bi-data.SBOX_CREDITS_SB.TASA_FINAL_X_PLAZO_MLA_FO`  AS -- para FO 
-- CREATE OR REPLACE TABLE `meli-bi-data.SBOX_CREDITS_SB.TASA_FINAL_X_PLAZO_MLA_EO`  AS -- para EO
SELECT A.BORROWER_ID, TNA_12M,TNA_9M,TNA_6M,TNA_3M,TNA_1M 
FROM BORROWERS A
LEFT JOIN TNA_PLAZO_1  B ON A.BORROWER_ID = B.BORROWER_ID
LEFT JOIN TNA_PLAZO_3  C ON A.BORROWER_ID = C.BORROWER_ID
LEFT JOIN TNA_PLAZO_6  D ON A.BORROWER_ID = D.BORROWER_ID
LEFT JOIN TNA_PLAZO_9  E ON A.BORROWER_ID = E.BORROWER_ID
LEFT JOIN TNA_PLAZO_12 F ON A.BORROWER_ID = F.BORROWER_ID
GROUP BY 1,2,3,4,5,6 ;


/*CREATE TEMPORARY TABLE TNA_X_INSTALLMENTS_AGG AS
  SELECT TP.BORROWER_ID,
         -- TP.PRODUCT_TYPE,
         to_json_string(array_agg(STRUCT(tp.installments AS INSTALLMENTS, tp.tna_inst AS TNA_INST) order by INSTALLMENTS)) AS tna_list
  -- FROM   TNA_X_INSTALLMENTS TP
  FROM `meli-bi-data.SBOX_CREDITS_SB.TNA_X_INSTALLMENTS_TEST` TP
  GROUP BY 1;*/
